<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize variables
sticked = false;
collisions = 0;
collisionx = 0;
collisiony = 0;
/*fix = physics_fixture_create();
physics_fixture_set_circle_shape(fix,8);
physics_fixture_set_density(fix,1);
physics_fixture_set_restitution(fix,0.1);
physics_fixture_set_collision_group(fix,0);
physics_fixture_set_linear_damping(fix,0.1);
physics_fixture_set_angular_damping(fix,0.1);
physics_fixture_set_friction(fix,10);

fix_ed = physics_fixture_create();
physics_fixture_set_circle_shape(fix_ed,8);
physics_fixture_set_density(fix_ed,0);
physics_fixture_set_restitution(fix_ed,0.1);
physics_fixture_set_collision_group(fix_ed,0);
physics_fixture_set_linear_damping(fix_ed,0.1);
physics_fixture_set_angular_damping(fix_ed,0.1);
physics_fixture_set_friction(fix_ed,10);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var instances = instance_number(obj_action_point);
var force = 300;

if (instances &gt; 0){
    // point coordinates
    x0 = obj_action_point.x - x;
    y0 = obj_action_point.y - y;
    // module
    module = sqrt(sqr(x0) + sqr(y0));
    //normalized coordinates
    xn = x0 / module;
    yn = y0 / module;
    // I may need to push the wall in order to unstick the player
    //if (module &gt; 20) sticked = false;
    // we apply a force towards the point
    physics_apply_force(x,y,xn * force,yn * force);
} else //sticked = false;

if (collisions == 0) sticked = false;

if (sticked){
    // we must stick to the point in space we are
    //physics_world_update_speed(0);
    //phy_active = false;
    //phy_linear_velocity_x = 0;
    //phy_linear_velocity_y = 0;
    phy_linear_damping = 1000;
} else{
    phy_linear_damping = 0.1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//We collide with a valid surface
sticked = true;
collisions = phy_collision_points;
collisionx = phy_collision_x[0];
collisiony = phy_collision_y[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Just touched a new point, we must unstick
if (sticked){
    sticked = false;
    phy_linear_damping = 0.1;
    var reduction = 5;
    //var force = 300;
    x0 = x - collisionx;
    y0 = y - collisiony;
    /*module = sqrt(sqr(x0) + sqr(y0));
    xn = x0 / module;
    yn = y0 / module;*/
    //physics_apply_force(x,y,xn * force, yn * force);
    
    //Lets try to move the player, instead of pushing him
    phy_position_x += x0 / reduction;
    phy_position_y += y0 / reduction;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
var instances = instance_number(obj_action_point);

draw_text(32,16,"number of points : " + string(instances));
if instances &gt; 0 
draw_text(32,32,"coordinates : " + string(obj_action_point.x) + "-" + string(obj_action_point.y))

if sticked draw_text(32,48,"sticked");
draw_text(32,64,"Collision points: " + string(collisions));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>10</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>10</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,0</point>
  </PhysicsShapePoints>
</object>
